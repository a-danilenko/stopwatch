{"version":3,"sources":["App.js","index.js"],"names":["App","useState","sec","setSec","status","setStatus","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","value","next","complete","start","React","useCallback","stop","wait","reset","className","Date","toISOString","slice","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAMe,SAASA,IAAO,IAAD,EACNC,mBAAS,GADH,mBACrBC,EADqB,KAChBC,EADgB,OAEAF,qBAFA,mBAErBG,EAFqB,KAEbC,EAFa,KAI5BC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAQxB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXR,GACFD,GAAO,SAAAU,GAAK,OAAIA,EAAQ,UAGvB,WACLN,EAAYO,OACZP,EAAYQ,cAEb,CAACX,IAEJ,IAAMY,EAAQC,IAAMC,aAAY,WAC9Bb,EAAU,SACT,IAEGc,EAAOF,IAAMC,aAAY,WAC7Bb,EAAU,QACVF,EAAO,KACN,IAEGiB,EAAOH,IAAMC,aAAY,WAC7Bb,EAAU,UACT,IAEGgB,EAAQJ,IAAMC,aAAY,WAC9Bf,EAAO,KACN,IAEH,OACE,sBAAKmB,UAAU,YAAf,UACE,uBAAMA,UAAU,QAAhB,cAA0B,IAAIC,KAAKrB,GAAKsB,cAAcC,MAAM,GAAI,OAChE,sBAAKH,UAAU,UAAf,UACE,wBAAQI,QAASV,EAAjB,mBACA,wBAAQU,QAASP,EAAjB,kBACA,wBAAQO,QAASN,EAAjB,kBACA,wBAAQM,QAASL,EAAjB,yBC5CRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d4381f7f.chunk.js","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { interval, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport './App.css'\n \nexport default function App() {\n  const [sec, setSec] = useState(0);\n  const [status, setStatus] = useState();\n \n  useEffect(() => {\n    const unsubscribe = new Subject();\n    interval(1000)\n      .pipe(takeUntil(unsubscribe))\n      .subscribe(() => {\n        if (status === 'run') {\n          setSec(value => value + 1000);\n        }\n      });\n    return () => {\n      unsubscribe.next();\n      unsubscribe.complete();\n    };\n  }, [status]);\n \n  const start = React.useCallback(() => {\n    setStatus('run');\n  }, []);\n \n  const stop = React.useCallback(() => {\n    setStatus('stop');\n    setSec(0);\n  }, []);\n\n  const wait = React.useCallback(() => {\n    setStatus('wait');\n  }, []);\n \n  const reset = React.useCallback(() => {\n    setSec(0);\n  }, []);\n \n  return (\n    <div className='container'>\n      <span className='watch'> {new Date(sec).toISOString().slice(11, 19)}</span>\n      <div className='buttons'>\n        <button onClick={start}>Start</button>\n        <button onClick={stop}>Stop</button>\n        <button onClick={wait}>Wait</button>\n        <button onClick={reset}>Reset</button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}